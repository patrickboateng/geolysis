[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geolysis"
description = "geolysis is an opensource software for geotechnical engineering analysis and modeling."
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "MIT License" }
requires-python = ">=3.11"
keywords = [
    "geotechnical-engineering",
    "soil-classification",
    "bearing-capacity-analysis",
    "standard-penetration-test-analysis",
]
authors = [{ name = "Patrick Boateng", email = "boatengpato.pb@gmail.com" }]
dependencies = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
]
dynamic = ["version"]

[tool.setuptools.dynamic]
version = { attr = "geolysis.__version__" }

[project.urls]
Homepage = "https://docs.geolysis.io"
Documentation = "https://docs.geolysis.io"
Repository = "https://github.com/patrickboateng/geolysis"
Discussions = "https://github.com/patrickboateng/geolysis/discussions"
"Issue Tracker" = "https://github.com/patrickboateng/geolysis/issues"

[tool.setuptools.packages.find]
include = ["geolysis*"]
namespaces = false

[project.optional-dependencies]
dev = ["pytest", "pytest-cov", "coverage"]

[tool.pytest.ini_options]
addopts = "-ra --verbose --strict-markers --doctest-modules"
minversion = "6.0"
testpaths = ["tests", "geolysis"]
doctest_optionflags = ["IGNORE_EXCEPTION_DETAIL", "NUMBER"]

[tool.docformatter]
style = "sphinx"
wrap-summaries = 79
wrap-descriptions = 79
pre-summary-newline = false
make-summary-multi-line = false
close-quotes-on-newline = true

[tool.pydocstyle]
# convention = "pep257"
ignore = ["D107", "D200"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "raise NotImplementedError",
]
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
